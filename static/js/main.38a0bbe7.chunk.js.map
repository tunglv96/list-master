{"version":3,"sources":["component/Header/index.js","component/Logo/index.js","component/Nav/index.js","component/Table/index.js","component/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["index","props","toggleMenu","setState","elmTaskMenu","state","this","id","className","onClick","type","placeholder","Component","Logo","Fragment","src","alt","Nav","href","Table","handlePagination","number","pageNumber","getListTable","console","log","products","axios","method","url","data","then","res","catch","err","current","pageSize","map","product","key","name","username","email","website","onShowSizeChange","onChange","showTotal","total","range","defaultPageSize","Footer","App","elmNav","Header","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a0bbe7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\n\r\nclass index extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elmTaskMenu: false\r\n    }\r\n  }\r\n  toggleMenu =   () => {\r\n    this.props.toggleMenu();\r\n    this.setState({\r\n      elmTaskMenu: !this.state.elmTaskMenu\r\n    });\r\n  }\r\n  render() {\r\n    let {elmTaskMenu} = this.state;\r\n    return (\r\n      <div id=\"header\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-1 col-1 bars\">\r\n              <span className={elmTaskMenu ? \"fas fa-times\" : \"fas fa-bars\"} onClick={this.toggleMenu} />\r\n            </div>\r\n            <div className=\"col-sm-5 col-5 from\">\r\n              <form className=\"my-2 my-lg-0\">\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                />\r\n                <span className=\"fas fa-search\" />\r\n              </form>\r\n            </div>\r\n            <div className=\"col-sm-6 col-6 header-icon\">\r\n              <ul>\r\n                <li className=\"icon_bell\">\r\n                  <span className=\"far fa-bell\" />\r\n                  <div className=\"bg-red\" />\r\n                </li>\r\n                <li className=\"icon_envelope\">\r\n                  <span className=\"fas fa-envelope-open-text\" />\r\n                  <div className=\"bg-red\" />\r\n                </li>\r\n                <li className=\"li_3\">\r\n                  <div className=\"qqq\">\r\n                    <div className=\"q\" />\r\n                    <div className=\"q1\" />\r\n                  </div>\r\n                </li>\r\n                <li className=\"user_name\">\r\n                  <strong>Valerie Luna</strong>\r\n                </li>\r\n                <li className=\"icon_user\">\r\n                  <span className=\"fas fa-user-circle\" />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"logo\">\r\n          <div className=\"bg-blue\">\r\n            <div className=\"bg-white\">\r\n              <img src=\"./images/logo.png\" alt=\"logo\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n          <div className=\" navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fab fa-microsoft\" />\r\n                  <p>Dashboard</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-heart\" />\r\n                  <p>Blue Print</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-cog\" />\r\n                  <p>Property</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-crown\" />\r\n                  <p>Master</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-book-open\" />\r\n                  <p>Tenants</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-globe\" />\r\n                  <p>Sites</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-check\" />\r\n                  <p>Parts</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-book-open\" />\r\n                  <p>Catalog</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <span className=\"fas fa-user\" />\r\n                  <p>User</p>\r\n                  <span className=\"fas fa-angle-right icon-next\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import \"antd/dist/antd.css\";\r\nimport { Pagination } from \"antd\";\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      pageNumber: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getListTable(this.state.pageNumber);\r\n  }\r\n\r\n  getListTable(number) {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://ho5gh.sse.codesandbox.io/todos?_limit=10&_page=${number}`,\r\n      data: \"null\"\r\n    })\r\n      .then(res => {\r\n        this.setState({ products: res.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  onShowSizeChange(current, pageSize) {\r\n    console.log(current, pageSize);\r\n  }\r\n\r\n  handlePagination = number => {\r\n    if (number !== this.state.pageNumber) {\r\n      this.getListTable(number);\r\n      this.setState({\r\n        pageNumber: number\r\n      });\r\n      console.log();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"table-list\" className=\"table-responsive\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body table-responsive sty-body\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                    <th>Website</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.products.map((product, index) => {\r\n                    return (\r\n                      <tr key={index} className=\"tr\">\r\n                        <td>{product.id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.username}</td>\r\n                        <td>{product.email}</td>\r\n                        <td>{product.website}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"pagination\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n              <nav>\r\n                <Pagination\r\n                  onShowSizeChange={this.onShowSizeChange}\r\n                  onChange={this.handlePagination}\r\n                  showTotal={(total, range) => `${total} 件中 ${range[0]} 件～ ${range[1]} 件を表示`}\r\n                  total={150}\r\n                  defaultPageSize={10}\r\n                  className=\"mt-5\"\r\n                />\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"footer\">\r\n                <p>© 2019. Cloudmanageportal Co., Ltd. All Ｒights Reserved</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport Header from \"./component/Header\";\r\nimport Logo from \"./component/Logo\";\r\nimport Nav from \"./component/Nav\";\r\nimport Table from \"./component/Table\";\r\nimport Footer from \"./component/Footer\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elmTaskMenu: true\r\n    }\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({\r\n      elmTaskMenu: !this.state.elmTaskMenu\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let {elmTaskMenu} = this.state;\r\n    let elmNav = elmTaskMenu ? <Nav /> : '';\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-1\" id=\"nav\">\r\n              <Logo />\r\n              {elmNav}\r\n            </div>\r\n            <div\r\n              className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-11\"\r\n              id=\"content\"\r\n            >\r\n              <Header toggleMenu={this.toggleMenu} />\r\n              <article>\r\n                <div className=\"conatiner-content\">\r\n                  <Table />\r\n                </div>\r\n              </article>\r\n              <Footer />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}